name: CI/CD Base

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      folder:
        required: true
        type: string
    # ðŸ’¡ FIX 1: De base workflow moet de secrets die hij nodig heeft van de aanroeper accepteren.
    secrets:
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT_EMAIL:
        required: true
      GCP_PROJECT:
        required: true
      REGION:
        required: true
      APP:
        required: true

jobs:
  tests:
    uses: ./.github/workflows/tests.yml
    with:
      folder: ${{ inputs.folder }}

  build-and-push:
    needs: tests
    uses: ./.github/workflows/build-and-push.yml
    with:
      service: ${{ inputs.service }}
      dockerfile: ${{ inputs.dockerfile }}
    # ðŸ’¡ FIX 2: Stuur de secrets expliciet door naar de 'build-and-push' canvas.
    secrets:
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
      REGION: ${{ secrets.REGION }}
      APP: ${{ secrets.APP }}

  deploy:
    needs: build-and-push
    # Draai de deploy alleen als de build succesvol was (niet overgeslagen)
    if: always() && needs.build-and-push.result == 'success'
    uses: ./.github/workflows/deploy.yml
    with:
      service: ${{ inputs.service }}
      image: ${{ needs.build-and-push.outputs.image }}
    # Stuur secrets ook door naar deploy.yml, zodat deze kan authenticeren/deployen.
    secrets:
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
      REGION: ${{ secrets.REGION }}
