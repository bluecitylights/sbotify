name: CI/CD Base Workflow

# üí° FIX 6: Voeg permissions toe aan het workflow-niveau, zodat alle downstream jobs 
# het OIDC-token voor Workload Identity kunnen genereren.
permissions:
  contents: read
  id-token: write
  packages: write # FIX: Toegevoegd om Docker-images naar Artifact Registry te pushen.

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      folder:
        required: true
        type: string
      # üí° VERWIJDERD: 'ref_name' op verzoek van de gebruiker.
    secrets:
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT_EMAIL:
        required: true
      GCP_PROJECT:
        required: true
      REGION:
        required: true
      APP:
        required: true
      PROJECT_NUMBER:
        required: true
      GEMINI_API_KEY:
        required: false # Optioneel voor niet-chat services

jobs:
  tests:
    uses: ./.github/workflows/tests.yml
    with:
      folder: ${{ inputs.folder }}

  build-and-push:
    needs: tests
    uses: ./.github/workflows/build-and-push.yml
    with:
      service: ${{ inputs.service }}
      dockerfile: ${{ inputs.dockerfile }}
      # üí° FIX: De 'folder' input is nodig voor de build context.
      folder: ${{ inputs.folder }}
    secrets:
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
      REGION: ${{ secrets.REGION }}
      APP: ${{ secrets.APP }}

  # Add a debug job to see what outputs we're getting
  debug-outputs:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Debug build-and-push outputs
        run: |
          echo "üêõ DEBUG: build-and-push job outputs:"
          echo "needs.build-and-push.outputs.image = '${{ needs.build-and-push.outputs.image }}'"
          echo "needs.build-and-push.result = '${{ needs.build-and-push.result }}'"
          echo "üîç All outputs from build-and-push:"
          echo '${{ toJSON(needs.build-and-push.outputs) }}'
          
          # Test if the output exists and is not empty
          if [ -z "${{ needs.build-and-push.outputs.image }}" ]; then
            echo "‚ùå ERROR: Image output is empty or not set!"
            echo "‚ö†Ô∏è  This will trigger fallback mode in deploy"
            # Don't exit with error - let deploy handle it
          else
            echo "‚úÖ SUCCESS: Image output is properly set"
          fi
    
  deploy:
    needs: build-and-push
    # Deploy ALTIJD als de build succesvol was, ongeacht debug output
    if: needs.build-and-push.result == 'success'
    uses: ./.github/workflows/deploy.yml
    with:
      service: ${{ inputs.service }}
      # üí° FIX: De image naam wordt nu correct opgehaald uit de output van de vorige job
      image: ${{ needs.build-and-push.outputs.image }} 
    secrets:
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
      REGION: ${{ secrets.REGION }}
      APP: ${{ secrets.APP }}
      PROJECT_NUMBER: ${{ secrets.PROJECT_NUMBER }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}