name: Deploy

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      image:
        required: true
        type: string
    secrets:
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT_EMAIL:
        required: true
      GCP_PROJECT:
        required: true
      REGION:
        required: true
      APP:
        required: true
      PROJECT_NUMBER:
        required: true
      GEMINI_API_KEY:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
      - name: Deploy to Cloud Run
        run: |
          # ðŸ’¡ FIX: Verwijder --image uit common_flags. We geven deze direct door.
          common_flags="--max-instances=1 \
            --platform=managed \
            --service-account=${{ secrets.APP }}-${{ inputs.service }}-user@${{ secrets.GCP_PROJECT }}.iam.gserviceaccount.com \
            --no-allow-unauthenticated \
            --ingress=internal"

          if [ "${{ inputs.service }}" == "chat" ]; then
            # GEMINI_API_KEY wordt toegevoegd als omgevingsvariabele
            common_flags+=" --update-env-vars=GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"
          fi

          if [ "${{ inputs.service }}" == "dashboard" ]; then
            # De PROJECT_NUMBER is nodig om de URL van de chat service te construeren
            common_flags+=" --update-env-vars=CHAT_API_URL=https://${{ secrets.APP }}-chat-${{ secrets.PROJECT_NUMBER }}.${{ secrets.REGION }}.run.app"
          fi

          # Geef de SERVICE en IMAGE nu expliciet door om parsingfouten te voorkomen.
          gcloud run deploy ${{ secrets.APP }}-${{ inputs.service }} \
            --image=${{ inputs.image }} \
            --region=${{ secrets.REGION }} \
            "$common_flags"
