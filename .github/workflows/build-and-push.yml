name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      folder: # ðŸ’¡ FIX: De ontbrekende 'folder' input is hier toegevoegd.
        required: true
        type: string
    secrets:
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT_EMAIL:
        required: true
      GCP_PROJECT:
        required: true
      REGION:
        required: true
      APP:
        required: true
    outputs:
      image:
        description: "The full URI of the pushed Docker image."
        value: ${{ jobs.build-push.outputs.IMAGE_URI }}

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # Voor Workload Identity
    outputs:
      IMAGE_URI: ${{ steps.set-image-uri.outputs.IMAGE_URI }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - id: set-image-uri
        name: Define Image URI
        run: |
          IMAGE_URI="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ secrets.APP }}/${{ inputs.service }}:${{ github.sha }}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_OUTPUT
        # De IMAGE_URI output wordt gebruikt in de 'outputs' sectie van de job.
        # ðŸ’¡ FIX: De ongeldige 'outputs' definitie in de stap is verwijderd.

      - name: Build Docker Image
        run: |
          docker build \
            --platform linux/amd64 \
            -t ${{ steps.set-image-uri.outputs.IMAGE_URI }} \
            -f ${{ inputs.dockerfile }} \
            ${{ inputs.folder }} # Gebruik de 'folder' input als build context
      
      - name: Push Docker Image to Artifact Registry
        run: docker push ${{ steps.set-image-uri.outputs.IMAGE_URI }}
