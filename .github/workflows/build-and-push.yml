name: Build and Push

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      folder:
        required: true
        type: string
    secrets:
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT_EMAIL:
        required: true
      GCP_PROJECT:
        required: true
      REGION:
        required: true
      APP:
        required: true
    outputs:
      image:
        description: "The full image URL that was built and pushed"
        value: ${{ jobs.build-and-push.outputs.image }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-and-push.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev
        
      - name: Build and push Docker image
        id: build-and-push
        run: |
          # Build the full image URL
          IMAGE_URL="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ secrets.APP }}/${{ inputs.service }}:${{ github.sha }}"
          
          echo "🐳 Building image: $IMAGE_URL"
          
          # Build and push the image with build arg, using . as context
          docker build \
            -f "${{ inputs.dockerfile }}" \
            -t "$IMAGE_URL" \
            --build-arg SERVICE_DIR="${{ inputs.service }}" \
            .
          
          docker push "$IMAGE_URL"
          
          # Set output directly in this step
          echo "image=$IMAGE_URL" >> "$GITHUB_OUTPUT"
          
          echo "✅ Image built and pushed: $IMAGE_URL"
          echo "🐛 DEBUG: Output set directly in build step"
          
      - name: Debug job outputs
        run: |
          echo "🔍 DEBUG: Testing step output access:"
          echo "steps.build-and-push.outputs.image = '${{ steps.build-and-push.outputs.image }}'"
          
          # Test if we can access the step output
          if [ -z "${{ steps.build-and-push.outputs.image }}" ]; then
            echo "❌ ERROR: Cannot access step output!"
          else
            echo "✅ SUCCESS: Step output is accessible: ${{ steps.build-and-push.outputs.image }}"
          fi