steps:
# Build and push the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_IMAGE}', '${_SERVICE}']

# Push the Docker image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_IMAGE}']

# Deploy the image to Cloud Run with conditional flags
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  secretEnv: ['GEMINI_API_KEY']
  entrypoint: bash
  args:
  - '-c'
  - |
    # All services need these common flags
    common_flags="--image=${_IMAGE} \
      --max-instances=${_MAX_INSTANCES} \
      --region=${_REGION} \
      --platform=managed \
      --set-env-vars=MCP_SERVER_URL_GCP=https://${_APP}-${_MCP_SERVER}-${PROJECT_NUMBER}.${_REGION}.run.app \
      --service-account=${_APP}-${_SERVICE}-user@${PROJECT_ID}.iam.gserviceaccount.com \
      --no-allow-unauthenticated"
      
    # Conditionally add the GEMINI_API_KEY for the 'chat' service only
    if [ "${_SERVICE}" == "chat" ]; then
      echo "Adding GEMINI_API_KEY to the chat service environment variables."
      common_flags+=" --update-env-vars=GEMINI_API_KEY=12$$GEMINI_API_KEY34"
    fi

    # Deploy based on IAP variable
    if [ "${_IAP}" == "true" ]; then
      # IAP requires gcloud beta and specific flags
      echo "Deploying with IAP..."
      gcloud beta run deploy ${_APP}-${_SERVICE} $common_flags \
        --iap --ingress internal-and-cloud-load-balancing
    else
      # Standard deployment without IAP
      echo "Deploying without IAP..."
      gcloud run deploy ${_APP}-${_SERVICE} $common_flags
    fi

images:
- '${_IMAGE}'

substitutions:
  _REGION: 'europe-west4'
  _IMAGE: '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_APP}/${_SERVICE}:${SHORT_SHA}'
  _APP: 'sbotify'
  _MCP_SERVER: 'mcp-server'
  _MAX_INSTANCES: '1'
  _SERVICE: ''
  _IAP: 'false'

options:
  logging: CLOUD_LOGGING_ONLY