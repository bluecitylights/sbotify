steps:
# Build and push the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_IMAGE}', '${_SERVICE}']

# Push the Docker image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_IMAGE}']

# Deploy the image to Cloud Run with conditional flags
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
  - '-c'
  - |
    deploy_cmd="gcloud run deploy ${_APP}-${_SERVICE} --image=${_IMAGE} --max-instances=1 --region=${_REGION} --platform=managed --set-env-vars=MCP_SERVER_URL_GCP=https://${_APP}-mcp-server-${PROJECT_NUMBER}.${_REGION}.run.app --service-account=${_APP}-${_SERVICE}-user@${PROJECT_ID}.iam.gserviceaccount.com"
    
    if [ "${_SERVICE}" == "chat" ]; then
      deploy_cmd+=" --iap --no-allow-unauthenticated"
    fi
    
    if [ "${_SERVICE}" == "mcp-server" ]; then
      deploy_cmd+=" --no-allow-unauthenticated"
    fi
    
    deploy_cmd+=" --ingress internal-and-cloud-load-balancing"
    
    echo "Running deployment command: $deploy_cmd"
    $deploy_cmd

images:
- '${_IMAGE}'

substitutions:
  _REGION: 'europe-west4'
  _IMAGE: '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_APP}/${_SERVICE}:${SHORT_SHA}'
  _APP: 'sbotify'
  _CHAT_SERVER: 'chat'
  _MCP_SERVICE: 'mcp-server'
  _SERVICE: '' # This substitution will be provided at the command line

options:
  logging: CLOUD_LOGGING_ONLY