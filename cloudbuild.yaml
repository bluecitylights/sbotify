steps:
# This step prepares the build context for services that require static assets.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - '-c'
    - |
      if [ "${_SERVICE}" == "${_CHAT_SERVICE}" ] || [ "${_SERVICE}" == "${_DASHBOARD_SERVICE}" ]; then
        echo "Copying shared static assets for ${_SERVICE}..."
        # Copy the 'static' folder into the service directory before building.
        cp -r static "${_SERVICE}/"
      else
        echo "No static assets needed for ${_SERVICE}. Skipping copy."
      fi
  id: 'prepare-static-assets'
  waitFor: ['-'] # This step runs first

# Build and push the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_IMAGE}', '${_SERVICE}']
  waitFor: ['prepare-static-assets']

# Push the Docker image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_IMAGE}']

# Deploy the image to Cloud Run with conditional flags
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  secretEnv: ['GEMINI_API_KEY']
  entrypoint: bash
  args:
    - '-c'
    - |
      # All services need these common flags. Use --update-env-vars for all.
      common_flags="--image=${_IMAGE} \
        --max-instances=${_MAX_INSTANCES} \
        --region=${_REGION} \
        --platform=managed \
        --service-account=${_APP}-${_SERVICE}-user@${PROJECT_ID}.iam.gserviceaccount.com \
        --no-allow-unauthenticated" \
        --ingress=internal"
      
      # Conditionally add the GEMINI_API_KEY and MCP_SERVER_URL_GCP for the 'chat' service only
      if [ "${_SERVICE}" == "${_CHAT_SERVICE}" ]; then
        echo "Adding GEMINI_API_KEY and MCP_SERVER_URL_GCP to the chat service environment variables."
        common_flags+=" --update-env-vars=GEMINI_API_KEY=$$GEMINI_API_KEY,MCP_SERVER_URL_GCP=https://${_APP}-${_MCP_SERVER}-${PROJECT_NUMBER}.${_REGION}.run.app"
      fi
      
      # Conditionally add the CHAT_API_URL for the 'dashboard' service only
      if [ "${_SERVICE}" == "${_DASHBOARD_SERVICE}" ]; then
        echo "Adding CHAT_API_URL to the dashboard service environment variables."
        common_flags+=" --update-env-vars=CHAT_API_URL=https://${_APP}-chat-${PROJECT_NUMBER}.${_REGION}.run.app"
      fi

      # Deploy based on IAP variable
      if [ "${_IAP}" == "true" ]; then
        # IAP requires gcloud beta and specific flags
        echo "Deploying with IAP..."
        gcloud beta run deploy ${_APP}-${_SERVICE} $common_flags \
          --iap
      else
        # Standard deployment without IAP
        echo "Deploying without IAP..."
        gcloud run deploy ${_APP}-${_SERVICE} $common_flags
      fi

images:
- '${_IMAGE}'

substitutions:
  _REGION: 'europe-west4'
  _IMAGE: '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_APP}/${_SERVICE}:${SHORT_SHA}'
  _APP: 'sbotify'
  _MCP_SERVER: 'mcp-server'
  _CHAT_SERVICE: 'chat'
  _DASHBOARD_SERVICE: 'dashboard'
  _MAX_INSTANCES: '1'
  _SERVICE: ''
  _IAP: 'false'

options:
  logging: CLOUD_LOGGING_ONLY

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/GEMINI_API_KEY/versions/latest
    env: 'GEMINI_API_KEY'
